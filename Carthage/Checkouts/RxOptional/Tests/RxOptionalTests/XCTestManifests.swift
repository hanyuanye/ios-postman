#if !canImport(ObjectiveC)
import XCTest

extension OccupiableOperatorsSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OccupiableOperatorsSpec = [
        ("filterEmpty__Observable__filters_out_empty_arrays", filterEmpty__Observable__filters_out_empty_arrays),
        ("filterEmpty__Observable__filters_out_empty_strings", filterEmpty__Observable__filters_out_empty_strings),
        ("filterEmpty__Driver__filters_out_empty_arrays", filterEmpty__Driver__filters_out_empty_arrays),
        ("filterEmpty__Driver__filters_out_empty_strings", filterEmpty__Driver__filters_out_empty_strings),
        ("catchOnEmpty__Observable__emits_default_error", catchOnEmpty__Observable__emits_default_error),
    ]
}

extension OptionalOperatorsSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OptionalOperatorsSpec = [
        ("filterNil__Observable__unwraps_the_optional", filterNil__Observable__unwraps_the_optional),
        ("filterNil__Observable__filters_nil_values", filterNil__Observable__filters_nil_values),
        ("filterNil__Observable__filters_nil_values_and_keeps_types", filterNil__Observable__filters_nil_values_and_keeps_types),
        ("filterNil__Driver__unwraps_the_optional", filterNil__Driver__unwraps_the_optional),
        ("filterNil__Driver__filters_nil_values", filterNil__Driver__filters_nil_values),
        ("filterNil__Signal__unwraps_the_optional", filterNil__Signal__unwraps_the_optional),
        ("filterNil__Signal__filters_nil_values", filterNil__Signal__filters_nil_values),
        ("Error_On_Nil__Observable__unwraps_the_optional", Error_On_Nil__Observable__unwraps_the_optional),
        ("Error_On_Nil__Observable__throws_default_error", Error_On_Nil__Observable__throws_default_error),
        ("replaceNilWith__Observable__unwraps_the_optional", replaceNilWith__Observable__unwraps_the_optional),
        ("replaceNilWith__Observable__replaces_nil_values", replaceNilWith__Observable__replaces_nil_values),
        ("replaceNilWith__Driver__unwraps_the_optional", replaceNilWith__Driver__unwraps_the_optional),
        ("replaceNilWith__Driver__replaces_nil_values", replaceNilWith__Driver__replaces_nil_values),
        ("catchOnNil__Observable__unwraps_the_optional", catchOnNil__Observable__unwraps_the_optional),
        ("catchOnNil__Observable__catches_nil_and_continues_with_new_observable", catchOnNil__Observable__catches_nil_and_continues_with_new_observable),
        ("catchOnNil__Driver__unwraps_the_optional", catchOnNil__Driver__unwraps_the_optional),
        ("catchOnNil__Driver__catches_nil_and_continues_with_new_observable", catchOnNil__Driver__catches_nil_and_continues_with_new_observable),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(OccupiableOperatorsSpec.__allTests__OccupiableOperatorsSpec),
        testCase(OptionalOperatorsSpec.__allTests__OptionalOperatorsSpec),
    ]
}
#endif
